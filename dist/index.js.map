{"version":3,"file":"index.js","sources":["../node_modules/hono/dist/utils/filepath.js","../node_modules/hono/dist/utils/mime.js","../node_modules/@hono/node-server/dist/serve-static.mjs","../node_modules/hono/dist/compose.js","../node_modules/hono/dist/utils/body.js","../node_modules/hono/dist/utils/url.js","../node_modules/hono/dist/request.js","../node_modules/hono/dist/utils/html.js","../node_modules/hono/dist/context.js","../node_modules/hono/dist/router.js","../node_modules/hono/dist/utils/constants.js","../node_modules/hono/dist/hono-base.js","../node_modules/hono/dist/router/reg-exp-router/node.js","../node_modules/hono/dist/router/reg-exp-router/trie.js","../node_modules/hono/dist/router/reg-exp-router/router.js","../node_modules/hono/dist/router/smart-router/router.js","../node_modules/hono/dist/router/trie-router/node.js","../node_modules/hono/dist/router/trie-router/router.js","../node_modules/hono/dist/hono.js","../node_modules/hono/dist/helper/factory/index.js","../node_modules/honox/dist/constants.js","../node_modules/honox/dist/server/context-storage.js","../node_modules/honox/dist/server/utils/file.js","../node_modules/honox/dist/server/server.js","../node_modules/honox/dist/server/with-defaults.js","../app/server.ts"],"sourcesContent":["// src/utils/filepath.ts\nvar getFilePath = (options) => {\n  let filename = options.filename;\n  const defaultDocument = options.defaultDocument || \"index.html\";\n  if (filename.endsWith(\"/\")) {\n    filename = filename.concat(defaultDocument);\n  } else if (!filename.match(/\\.[a-zA-Z0-9_-]+$/)) {\n    filename = filename.concat(\"/\" + defaultDocument);\n  }\n  const path = getFilePathWithoutDefaultDocument({\n    root: options.root,\n    filename\n  });\n  return path;\n};\nvar getFilePathWithoutDefaultDocument = (options) => {\n  let root = options.root || \"\";\n  let filename = options.filename;\n  if (/(?:^|[\\/\\\\])\\.\\.(?:$|[\\/\\\\])/.test(filename)) {\n    return;\n  }\n  filename = filename.replace(/^\\.?[\\/\\\\]/, \"\");\n  filename = filename.replace(/\\\\/, \"/\");\n  root = root.replace(/\\/$/, \"\");\n  let path = root ? root + \"/\" + filename : filename;\n  path = path.replace(/^\\.?\\//, \"\");\n  if (root[0] !== \"/\" && path[0] === \"/\") {\n    return;\n  }\n  return path;\n};\nexport {\n  getFilePath,\n  getFilePathWithoutDefaultDocument\n};\n","// src/utils/mime.ts\nvar getMimeType = (filename, mimes = baseMimes) => {\n  const regexp = /\\.([a-zA-Z0-9]+?)$/;\n  const match = filename.match(regexp);\n  if (!match) {\n    return;\n  }\n  let mimeType = mimes[match[1]];\n  if (mimeType && mimeType.startsWith(\"text\")) {\n    mimeType += \"; charset=utf-8\";\n  }\n  return mimeType;\n};\nvar getExtension = (mimeType) => {\n  for (const ext in baseMimes) {\n    if (baseMimes[ext] === mimeType) {\n      return ext;\n    }\n  }\n};\nvar _baseMimes = {\n  aac: \"audio/aac\",\n  avi: \"video/x-msvideo\",\n  avif: \"image/avif\",\n  av1: \"video/av1\",\n  bin: \"application/octet-stream\",\n  bmp: \"image/bmp\",\n  css: \"text/css\",\n  csv: \"text/csv\",\n  eot: \"application/vnd.ms-fontobject\",\n  epub: \"application/epub+zip\",\n  gif: \"image/gif\",\n  gz: \"application/gzip\",\n  htm: \"text/html\",\n  html: \"text/html\",\n  ico: \"image/x-icon\",\n  ics: \"text/calendar\",\n  jpeg: \"image/jpeg\",\n  jpg: \"image/jpeg\",\n  js: \"text/javascript\",\n  json: \"application/json\",\n  jsonld: \"application/ld+json\",\n  map: \"application/json\",\n  mid: \"audio/x-midi\",\n  midi: \"audio/x-midi\",\n  mjs: \"text/javascript\",\n  mp3: \"audio/mpeg\",\n  mp4: \"video/mp4\",\n  mpeg: \"video/mpeg\",\n  oga: \"audio/ogg\",\n  ogv: \"video/ogg\",\n  ogx: \"application/ogg\",\n  opus: \"audio/opus\",\n  otf: \"font/otf\",\n  pdf: \"application/pdf\",\n  png: \"image/png\",\n  rtf: \"application/rtf\",\n  svg: \"image/svg+xml\",\n  tif: \"image/tiff\",\n  tiff: \"image/tiff\",\n  ts: \"video/mp2t\",\n  ttf: \"font/ttf\",\n  txt: \"text/plain\",\n  wasm: \"application/wasm\",\n  webm: \"video/webm\",\n  weba: \"audio/webm\",\n  webp: \"image/webp\",\n  woff: \"font/woff\",\n  woff2: \"font/woff2\",\n  xhtml: \"application/xhtml+xml\",\n  xml: \"application/xml\",\n  zip: \"application/zip\",\n  \"3gp\": \"video/3gpp\",\n  \"3g2\": \"video/3gpp2\",\n  gltf: \"model/gltf+json\",\n  glb: \"model/gltf-binary\"\n};\nvar baseMimes = _baseMimes;\nexport {\n  getExtension,\n  getMimeType,\n  baseMimes as mimes\n};\n","// src/serve-static.ts\nimport { getFilePath, getFilePathWithoutDefaultDocument } from \"hono/utils/filepath\";\nimport { getMimeType } from \"hono/utils/mime\";\nimport { createReadStream, lstatSync } from \"fs\";\nvar COMPRESSIBLE_CONTENT_TYPE_REGEX = /^\\s*(?:text\\/[^;\\s]+|application\\/(?:javascript|json|xml|xml-dtd|ecmascript|dart|postscript|rtf|tar|toml|vnd\\.dart|vnd\\.ms-fontobject|vnd\\.ms-opentype|wasm|x-httpd-php|x-javascript|x-ns-proxy-autoconfig|x-sh|x-tar|x-virtualbox-hdd|x-virtualbox-ova|x-virtualbox-ovf|x-virtualbox-vbox|x-virtualbox-vdi|x-virtualbox-vhd|x-virtualbox-vmdk|x-www-form-urlencoded)|font\\/(?:otf|ttf)|image\\/(?:bmp|vnd\\.adobe\\.photoshop|vnd\\.microsoft\\.icon|vnd\\.ms-dds|x-icon|x-ms-bmp)|message\\/rfc822|model\\/gltf-binary|x-shader\\/x-fragment|x-shader\\/x-vertex|[^;\\s]+?\\+(?:json|text|xml|yaml))(?:[;\\s]|$)/i;\nvar ENCODINGS = {\n  br: \".br\",\n  zstd: \".zst\",\n  gzip: \".gz\"\n};\nvar ENCODINGS_ORDERED_KEYS = Object.keys(ENCODINGS);\nvar createStreamBody = (stream) => {\n  const body = new ReadableStream({\n    start(controller) {\n      stream.on(\"data\", (chunk) => {\n        controller.enqueue(chunk);\n      });\n      stream.on(\"end\", () => {\n        controller.close();\n      });\n    },\n    cancel() {\n      stream.destroy();\n    }\n  });\n  return body;\n};\nvar addCurrentDirPrefix = (path) => {\n  return `./${path}`;\n};\nvar getStats = (path) => {\n  let stats;\n  try {\n    stats = lstatSync(path);\n  } catch {\n  }\n  return stats;\n};\nvar serveStatic = (options = { root: \"\" }) => {\n  return async (c, next) => {\n    if (c.finalized) {\n      return next();\n    }\n    let filename;\n    try {\n      filename = options.path ?? decodeURIComponent(c.req.path);\n    } catch {\n      await options.onNotFound?.(c.req.path, c);\n      return next();\n    }\n    let path = getFilePathWithoutDefaultDocument({\n      filename: options.rewriteRequestPath ? options.rewriteRequestPath(filename) : filename,\n      root: options.root\n    });\n    if (path) {\n      path = addCurrentDirPrefix(path);\n    } else {\n      return next();\n    }\n    let stats = getStats(path);\n    if (stats && stats.isDirectory()) {\n      path = getFilePath({\n        filename: options.rewriteRequestPath ? options.rewriteRequestPath(filename) : filename,\n        root: options.root,\n        defaultDocument: options.index ?? \"index.html\"\n      });\n      if (path) {\n        path = addCurrentDirPrefix(path);\n      } else {\n        return next();\n      }\n      stats = getStats(path);\n    }\n    if (!stats) {\n      await options.onNotFound?.(path, c);\n      return next();\n    }\n    await options.onFound?.(path, c);\n    const mimeType = getMimeType(path);\n    c.header(\"Content-Type\", mimeType || \"application/octet-stream\");\n    if (options.precompressed && (!mimeType || COMPRESSIBLE_CONTENT_TYPE_REGEX.test(mimeType))) {\n      const acceptEncodingSet = new Set(\n        c.req.header(\"Accept-Encoding\")?.split(\",\").map((encoding) => encoding.trim())\n      );\n      for (const encoding of ENCODINGS_ORDERED_KEYS) {\n        if (!acceptEncodingSet.has(encoding)) {\n          continue;\n        }\n        const precompressedStats = getStats(path + ENCODINGS[encoding]);\n        if (precompressedStats) {\n          c.header(\"Content-Encoding\", encoding);\n          c.header(\"Vary\", \"Accept-Encoding\", { append: true });\n          stats = precompressedStats;\n          path = path + ENCODINGS[encoding];\n          break;\n        }\n      }\n    }\n    const size = stats.size;\n    if (c.req.method == \"HEAD\" || c.req.method == \"OPTIONS\") {\n      c.header(\"Content-Length\", size.toString());\n      c.status(200);\n      return c.body(null);\n    }\n    const range = c.req.header(\"range\") || \"\";\n    if (!range) {\n      c.header(\"Content-Length\", size.toString());\n      return c.body(createStreamBody(createReadStream(path)), 200);\n    }\n    c.header(\"Accept-Ranges\", \"bytes\");\n    c.header(\"Date\", stats.birthtime.toUTCString());\n    const parts = range.replace(/bytes=/, \"\").split(\"-\", 2);\n    const start = parts[0] ? parseInt(parts[0], 10) : 0;\n    let end = parts[1] ? parseInt(parts[1], 10) : stats.size - 1;\n    if (size < end - start + 1) {\n      end = size - 1;\n    }\n    const chunksize = end - start + 1;\n    const stream = createReadStream(path, { start, end });\n    c.header(\"Content-Length\", chunksize.toString());\n    c.header(\"Content-Range\", `bytes ${start}-${end}/${stats.size}`);\n    return c.body(createStreamBody(stream), 206);\n  };\n};\nexport {\n  serveStatic\n};\n","// src/compose.ts\nvar compose = (middleware, onError, onNotFound) => {\n  return (context, next) => {\n    let index = -1;\n    return dispatch(0);\n    async function dispatch(i) {\n      if (i <= index) {\n        throw new Error(\"next() called multiple times\");\n      }\n      index = i;\n      let res;\n      let isError = false;\n      let handler;\n      if (middleware[i]) {\n        handler = middleware[i][0][0];\n        context.req.routeIndex = i;\n      } else {\n        handler = i === middleware.length && next || void 0;\n      }\n      if (handler) {\n        try {\n          res = await handler(context, () => dispatch(i + 1));\n        } catch (err) {\n          if (err instanceof Error && onError) {\n            context.error = err;\n            res = await onError(err, context);\n            isError = true;\n          } else {\n            throw err;\n          }\n        }\n      } else {\n        if (context.finalized === false && onNotFound) {\n          res = await onNotFound(context);\n        }\n      }\n      if (res && (context.finalized === false || isError)) {\n        context.res = res;\n      }\n      return context;\n    }\n  };\n};\nexport {\n  compose\n};\n","// src/utils/body.ts\nimport { HonoRequest } from \"../request.js\";\nvar parseBody = async (request, options = /* @__PURE__ */ Object.create(null)) => {\n  const { all = false, dot = false } = options;\n  const headers = request instanceof HonoRequest ? request.raw.headers : request.headers;\n  const contentType = headers.get(\"Content-Type\");\n  if (contentType?.startsWith(\"multipart/form-data\") || contentType?.startsWith(\"application/x-www-form-urlencoded\")) {\n    return parseFormData(request, { all, dot });\n  }\n  return {};\n};\nasync function parseFormData(request, options) {\n  const formData = await request.formData();\n  if (formData) {\n    return convertFormDataToBodyData(formData, options);\n  }\n  return {};\n}\nfunction convertFormDataToBodyData(formData, options) {\n  const form = /* @__PURE__ */ Object.create(null);\n  formData.forEach((value, key) => {\n    const shouldParseAllValues = options.all || key.endsWith(\"[]\");\n    if (!shouldParseAllValues) {\n      form[key] = value;\n    } else {\n      handleParsingAllValues(form, key, value);\n    }\n  });\n  if (options.dot) {\n    Object.entries(form).forEach(([key, value]) => {\n      const shouldParseDotValues = key.includes(\".\");\n      if (shouldParseDotValues) {\n        handleParsingNestedValues(form, key, value);\n        delete form[key];\n      }\n    });\n  }\n  return form;\n}\nvar handleParsingAllValues = (form, key, value) => {\n  if (form[key] !== void 0) {\n    if (Array.isArray(form[key])) {\n      ;\n      form[key].push(value);\n    } else {\n      form[key] = [form[key], value];\n    }\n  } else {\n    form[key] = value;\n  }\n};\nvar handleParsingNestedValues = (form, key, value) => {\n  let nestedForm = form;\n  const keys = key.split(\".\");\n  keys.forEach((key2, index) => {\n    if (index === keys.length - 1) {\n      nestedForm[key2] = value;\n    } else {\n      if (!nestedForm[key2] || typeof nestedForm[key2] !== \"object\" || Array.isArray(nestedForm[key2]) || nestedForm[key2] instanceof File) {\n        nestedForm[key2] = /* @__PURE__ */ Object.create(null);\n      }\n      nestedForm = nestedForm[key2];\n    }\n  });\n};\nexport {\n  parseBody\n};\n","// src/utils/url.ts\nvar splitPath = (path) => {\n  const paths = path.split(\"/\");\n  if (paths[0] === \"\") {\n    paths.shift();\n  }\n  return paths;\n};\nvar splitRoutingPath = (routePath) => {\n  const { groups, path } = extractGroupsFromPath(routePath);\n  const paths = splitPath(path);\n  return replaceGroupMarks(paths, groups);\n};\nvar extractGroupsFromPath = (path) => {\n  const groups = [];\n  path = path.replace(/\\{[^}]+\\}/g, (match, index) => {\n    const mark = `@${index}`;\n    groups.push([mark, match]);\n    return mark;\n  });\n  return { groups, path };\n};\nvar replaceGroupMarks = (paths, groups) => {\n  for (let i = groups.length - 1; i >= 0; i--) {\n    const [mark] = groups[i];\n    for (let j = paths.length - 1; j >= 0; j--) {\n      if (paths[j].includes(mark)) {\n        paths[j] = paths[j].replace(mark, groups[i][1]);\n        break;\n      }\n    }\n  }\n  return paths;\n};\nvar patternCache = {};\nvar getPattern = (label, next) => {\n  if (label === \"*\") {\n    return \"*\";\n  }\n  const match = label.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n  if (match) {\n    const cacheKey = `${label}#${next}`;\n    if (!patternCache[cacheKey]) {\n      if (match[2]) {\n        patternCache[cacheKey] = next && next[0] !== \":\" && next[0] !== \"*\" ? [cacheKey, match[1], new RegExp(`^${match[2]}(?=/${next})`)] : [label, match[1], new RegExp(`^${match[2]}$`)];\n      } else {\n        patternCache[cacheKey] = [label, match[1], true];\n      }\n    }\n    return patternCache[cacheKey];\n  }\n  return null;\n};\nvar tryDecode = (str, decoder) => {\n  try {\n    return decoder(str);\n  } catch {\n    return str.replace(/(?:%[0-9A-Fa-f]{2})+/g, (match) => {\n      try {\n        return decoder(match);\n      } catch {\n        return match;\n      }\n    });\n  }\n};\nvar tryDecodeURI = (str) => tryDecode(str, decodeURI);\nvar getPath = (request) => {\n  const url = request.url;\n  const start = url.indexOf(\"/\", 8);\n  let i = start;\n  for (; i < url.length; i++) {\n    const charCode = url.charCodeAt(i);\n    if (charCode === 37) {\n      const queryIndex = url.indexOf(\"?\", i);\n      const path = url.slice(start, queryIndex === -1 ? void 0 : queryIndex);\n      return tryDecodeURI(path.includes(\"%25\") ? path.replace(/%25/g, \"%2525\") : path);\n    } else if (charCode === 63) {\n      break;\n    }\n  }\n  return url.slice(start, i);\n};\nvar getQueryStrings = (url) => {\n  const queryIndex = url.indexOf(\"?\", 8);\n  return queryIndex === -1 ? \"\" : \"?\" + url.slice(queryIndex + 1);\n};\nvar getPathNoStrict = (request) => {\n  const result = getPath(request);\n  return result.length > 1 && result.at(-1) === \"/\" ? result.slice(0, -1) : result;\n};\nvar mergePath = (base, sub, ...rest) => {\n  if (rest.length) {\n    sub = mergePath(sub, ...rest);\n  }\n  return `${base?.[0] === \"/\" ? \"\" : \"/\"}${base}${sub === \"/\" ? \"\" : `${base?.at(-1) === \"/\" ? \"\" : \"/\"}${sub?.[0] === \"/\" ? sub.slice(1) : sub}`}`;\n};\nvar checkOptionalParameter = (path) => {\n  if (path.charCodeAt(path.length - 1) !== 63 || !path.includes(\":\")) {\n    return null;\n  }\n  const segments = path.split(\"/\");\n  const results = [];\n  let basePath = \"\";\n  segments.forEach((segment) => {\n    if (segment !== \"\" && !/\\:/.test(segment)) {\n      basePath += \"/\" + segment;\n    } else if (/\\:/.test(segment)) {\n      if (/\\?/.test(segment)) {\n        if (results.length === 0 && basePath === \"\") {\n          results.push(\"/\");\n        } else {\n          results.push(basePath);\n        }\n        const optionalSegment = segment.replace(\"?\", \"\");\n        basePath += \"/\" + optionalSegment;\n        results.push(basePath);\n      } else {\n        basePath += \"/\" + segment;\n      }\n    }\n  });\n  return results.filter((v, i, a) => a.indexOf(v) === i);\n};\nvar _decodeURI = (value) => {\n  if (!/[%+]/.test(value)) {\n    return value;\n  }\n  if (value.indexOf(\"+\") !== -1) {\n    value = value.replace(/\\+/g, \" \");\n  }\n  return value.indexOf(\"%\") !== -1 ? decodeURIComponent_(value) : value;\n};\nvar _getQueryParam = (url, key, multiple) => {\n  let encoded;\n  if (!multiple && key && !/[%+]/.test(key)) {\n    let keyIndex2 = url.indexOf(`?${key}`, 8);\n    if (keyIndex2 === -1) {\n      keyIndex2 = url.indexOf(`&${key}`, 8);\n    }\n    while (keyIndex2 !== -1) {\n      const trailingKeyCode = url.charCodeAt(keyIndex2 + key.length + 1);\n      if (trailingKeyCode === 61) {\n        const valueIndex = keyIndex2 + key.length + 2;\n        const endIndex = url.indexOf(\"&\", valueIndex);\n        return _decodeURI(url.slice(valueIndex, endIndex === -1 ? void 0 : endIndex));\n      } else if (trailingKeyCode == 38 || isNaN(trailingKeyCode)) {\n        return \"\";\n      }\n      keyIndex2 = url.indexOf(`&${key}`, keyIndex2 + 1);\n    }\n    encoded = /[%+]/.test(url);\n    if (!encoded) {\n      return void 0;\n    }\n  }\n  const results = {};\n  encoded ??= /[%+]/.test(url);\n  let keyIndex = url.indexOf(\"?\", 8);\n  while (keyIndex !== -1) {\n    const nextKeyIndex = url.indexOf(\"&\", keyIndex + 1);\n    let valueIndex = url.indexOf(\"=\", keyIndex);\n    if (valueIndex > nextKeyIndex && nextKeyIndex !== -1) {\n      valueIndex = -1;\n    }\n    let name = url.slice(\n      keyIndex + 1,\n      valueIndex === -1 ? nextKeyIndex === -1 ? void 0 : nextKeyIndex : valueIndex\n    );\n    if (encoded) {\n      name = _decodeURI(name);\n    }\n    keyIndex = nextKeyIndex;\n    if (name === \"\") {\n      continue;\n    }\n    let value;\n    if (valueIndex === -1) {\n      value = \"\";\n    } else {\n      value = url.slice(valueIndex + 1, nextKeyIndex === -1 ? void 0 : nextKeyIndex);\n      if (encoded) {\n        value = _decodeURI(value);\n      }\n    }\n    if (multiple) {\n      if (!(results[name] && Array.isArray(results[name]))) {\n        results[name] = [];\n      }\n      ;\n      results[name].push(value);\n    } else {\n      results[name] ??= value;\n    }\n  }\n  return key ? results[key] : results;\n};\nvar getQueryParam = _getQueryParam;\nvar getQueryParams = (url, key) => {\n  return _getQueryParam(url, key, true);\n};\nvar decodeURIComponent_ = decodeURIComponent;\nexport {\n  checkOptionalParameter,\n  decodeURIComponent_,\n  getPath,\n  getPathNoStrict,\n  getPattern,\n  getQueryParam,\n  getQueryParams,\n  getQueryStrings,\n  mergePath,\n  splitPath,\n  splitRoutingPath,\n  tryDecode\n};\n","// src/request.ts\nimport { parseBody } from \"./utils/body.js\";\nimport { decodeURIComponent_, getQueryParam, getQueryParams, tryDecode } from \"./utils/url.js\";\nvar tryDecodeURIComponent = (str) => tryDecode(str, decodeURIComponent_);\nvar HonoRequest = class {\n  raw;\n  #validatedData;\n  #matchResult;\n  routeIndex = 0;\n  path;\n  bodyCache = {};\n  constructor(request, path = \"/\", matchResult = [[]]) {\n    this.raw = request;\n    this.path = path;\n    this.#matchResult = matchResult;\n    this.#validatedData = {};\n  }\n  param(key) {\n    return key ? this.#getDecodedParam(key) : this.#getAllDecodedParams();\n  }\n  #getDecodedParam(key) {\n    const paramKey = this.#matchResult[0][this.routeIndex][1][key];\n    const param = this.#getParamValue(paramKey);\n    return param ? /\\%/.test(param) ? tryDecodeURIComponent(param) : param : void 0;\n  }\n  #getAllDecodedParams() {\n    const decoded = {};\n    const keys = Object.keys(this.#matchResult[0][this.routeIndex][1]);\n    for (const key of keys) {\n      const value = this.#getParamValue(this.#matchResult[0][this.routeIndex][1][key]);\n      if (value && typeof value === \"string\") {\n        decoded[key] = /\\%/.test(value) ? tryDecodeURIComponent(value) : value;\n      }\n    }\n    return decoded;\n  }\n  #getParamValue(paramKey) {\n    return this.#matchResult[1] ? this.#matchResult[1][paramKey] : paramKey;\n  }\n  query(key) {\n    return getQueryParam(this.url, key);\n  }\n  queries(key) {\n    return getQueryParams(this.url, key);\n  }\n  header(name) {\n    if (name) {\n      return this.raw.headers.get(name) ?? void 0;\n    }\n    const headerData = {};\n    this.raw.headers.forEach((value, key) => {\n      headerData[key] = value;\n    });\n    return headerData;\n  }\n  async parseBody(options) {\n    return this.bodyCache.parsedBody ??= await parseBody(this, options);\n  }\n  #cachedBody = (key) => {\n    const { bodyCache, raw } = this;\n    const cachedBody = bodyCache[key];\n    if (cachedBody) {\n      return cachedBody;\n    }\n    const anyCachedKey = Object.keys(bodyCache)[0];\n    if (anyCachedKey) {\n      return bodyCache[anyCachedKey].then((body) => {\n        if (anyCachedKey === \"json\") {\n          body = JSON.stringify(body);\n        }\n        return new Response(body)[key]();\n      });\n    }\n    return bodyCache[key] = raw[key]();\n  };\n  json() {\n    return this.#cachedBody(\"json\");\n  }\n  text() {\n    return this.#cachedBody(\"text\");\n  }\n  arrayBuffer() {\n    return this.#cachedBody(\"arrayBuffer\");\n  }\n  blob() {\n    return this.#cachedBody(\"blob\");\n  }\n  formData() {\n    return this.#cachedBody(\"formData\");\n  }\n  addValidatedData(target, data) {\n    this.#validatedData[target] = data;\n  }\n  valid(target) {\n    return this.#validatedData[target];\n  }\n  get url() {\n    return this.raw.url;\n  }\n  get method() {\n    return this.raw.method;\n  }\n  get matchedRoutes() {\n    return this.#matchResult[0].map(([[, route]]) => route);\n  }\n  get routePath() {\n    return this.#matchResult[0].map(([[, route]]) => route)[this.routeIndex].path;\n  }\n};\nexport {\n  HonoRequest\n};\n","// src/utils/html.ts\nvar HtmlEscapedCallbackPhase = {\n  Stringify: 1,\n  BeforeStream: 2,\n  Stream: 3\n};\nvar raw = (value, callbacks) => {\n  const escapedString = new String(value);\n  escapedString.isEscaped = true;\n  escapedString.callbacks = callbacks;\n  return escapedString;\n};\nvar escapeRe = /[&<>'\"]/;\nvar stringBufferToString = async (buffer, callbacks) => {\n  let str = \"\";\n  callbacks ||= [];\n  const resolvedBuffer = await Promise.all(buffer);\n  for (let i = resolvedBuffer.length - 1; ; i--) {\n    str += resolvedBuffer[i];\n    i--;\n    if (i < 0) {\n      break;\n    }\n    let r = resolvedBuffer[i];\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    const isEscaped = r.isEscaped;\n    r = await (typeof r === \"object\" ? r.toString() : r);\n    if (typeof r === \"object\") {\n      callbacks.push(...r.callbacks || []);\n    }\n    if (r.isEscaped ?? isEscaped) {\n      str += r;\n    } else {\n      const buf = [str];\n      escapeToBuffer(r, buf);\n      str = buf[0];\n    }\n  }\n  return raw(str, callbacks);\n};\nvar escapeToBuffer = (str, buffer) => {\n  const match = str.search(escapeRe);\n  if (match === -1) {\n    buffer[0] += str;\n    return;\n  }\n  let escape;\n  let index;\n  let lastIndex = 0;\n  for (index = match; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34:\n        escape = \"&quot;\";\n        break;\n      case 39:\n        escape = \"&#39;\";\n        break;\n      case 38:\n        escape = \"&amp;\";\n        break;\n      case 60:\n        escape = \"&lt;\";\n        break;\n      case 62:\n        escape = \"&gt;\";\n        break;\n      default:\n        continue;\n    }\n    buffer[0] += str.substring(lastIndex, index) + escape;\n    lastIndex = index + 1;\n  }\n  buffer[0] += str.substring(lastIndex, index);\n};\nvar resolveCallbackSync = (str) => {\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return str;\n  }\n  const buffer = [str];\n  const context = {};\n  callbacks.forEach((c) => c({ phase: HtmlEscapedCallbackPhase.Stringify, buffer, context }));\n  return buffer[0];\n};\nvar resolveCallback = async (str, phase, preserveCallbacks, context, buffer) => {\n  if (typeof str === \"object\" && !(str instanceof String)) {\n    if (!(str instanceof Promise)) {\n      str = str.toString();\n    }\n    if (str instanceof Promise) {\n      str = await str;\n    }\n  }\n  const callbacks = str.callbacks;\n  if (!callbacks?.length) {\n    return Promise.resolve(str);\n  }\n  if (buffer) {\n    buffer[0] += str;\n  } else {\n    buffer = [str];\n  }\n  const resStr = Promise.all(callbacks.map((c) => c({ phase, buffer, context }))).then(\n    (res) => Promise.all(\n      res.filter(Boolean).map((str2) => resolveCallback(str2, phase, false, context, buffer))\n    ).then(() => buffer[0])\n  );\n  if (preserveCallbacks) {\n    return raw(await resStr, callbacks);\n  } else {\n    return resStr;\n  }\n};\nexport {\n  HtmlEscapedCallbackPhase,\n  escapeToBuffer,\n  raw,\n  resolveCallback,\n  resolveCallbackSync,\n  stringBufferToString\n};\n","// src/context.ts\nimport { HonoRequest } from \"./request.js\";\nimport { HtmlEscapedCallbackPhase, resolveCallback } from \"./utils/html.js\";\nvar TEXT_PLAIN = \"text/plain; charset=UTF-8\";\nvar setHeaders = (headers, map = {}) => {\n  for (const key of Object.keys(map)) {\n    headers.set(key, map[key]);\n  }\n  return headers;\n};\nvar Context = class {\n  #rawRequest;\n  #req;\n  env = {};\n  #var;\n  finalized = false;\n  error;\n  #status = 200;\n  #executionCtx;\n  #headers;\n  #preparedHeaders;\n  #res;\n  #isFresh = true;\n  #layout;\n  #renderer;\n  #notFoundHandler;\n  #matchResult;\n  #path;\n  constructor(req, options) {\n    this.#rawRequest = req;\n    if (options) {\n      this.#executionCtx = options.executionCtx;\n      this.env = options.env;\n      this.#notFoundHandler = options.notFoundHandler;\n      this.#path = options.path;\n      this.#matchResult = options.matchResult;\n    }\n  }\n  get req() {\n    this.#req ??= new HonoRequest(this.#rawRequest, this.#path, this.#matchResult);\n    return this.#req;\n  }\n  get event() {\n    if (this.#executionCtx && \"respondWith\" in this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no FetchEvent\");\n    }\n  }\n  get executionCtx() {\n    if (this.#executionCtx) {\n      return this.#executionCtx;\n    } else {\n      throw Error(\"This context has no ExecutionContext\");\n    }\n  }\n  get res() {\n    this.#isFresh = false;\n    return this.#res ||= new Response(\"404 Not Found\", { status: 404 });\n  }\n  set res(_res) {\n    this.#isFresh = false;\n    if (this.#res && _res) {\n      try {\n        for (const [k, v] of this.#res.headers.entries()) {\n          if (k === \"content-type\") {\n            continue;\n          }\n          if (k === \"set-cookie\") {\n            const cookies = this.#res.headers.getSetCookie();\n            _res.headers.delete(\"set-cookie\");\n            for (const cookie of cookies) {\n              _res.headers.append(\"set-cookie\", cookie);\n            }\n          } else {\n            _res.headers.set(k, v);\n          }\n        }\n      } catch (e) {\n        if (e instanceof TypeError && e.message.includes(\"immutable\")) {\n          this.res = new Response(_res.body, {\n            headers: _res.headers,\n            status: _res.status\n          });\n          return;\n        } else {\n          throw e;\n        }\n      }\n    }\n    this.#res = _res;\n    this.finalized = true;\n  }\n  render = (...args) => {\n    this.#renderer ??= (content) => this.html(content);\n    return this.#renderer(...args);\n  };\n  setLayout = (layout) => this.#layout = layout;\n  getLayout = () => this.#layout;\n  setRenderer = (renderer) => {\n    this.#renderer = renderer;\n  };\n  header = (name, value, options) => {\n    if (value === void 0) {\n      if (this.#headers) {\n        this.#headers.delete(name);\n      } else if (this.#preparedHeaders) {\n        delete this.#preparedHeaders[name.toLocaleLowerCase()];\n      }\n      if (this.finalized) {\n        this.res.headers.delete(name);\n      }\n      return;\n    }\n    if (options?.append) {\n      if (!this.#headers) {\n        this.#isFresh = false;\n        this.#headers = new Headers(this.#preparedHeaders);\n        this.#preparedHeaders = {};\n      }\n      this.#headers.append(name, value);\n    } else {\n      if (this.#headers) {\n        this.#headers.set(name, value);\n      } else {\n        this.#preparedHeaders ??= {};\n        this.#preparedHeaders[name.toLowerCase()] = value;\n      }\n    }\n    if (this.finalized) {\n      if (options?.append) {\n        this.res.headers.append(name, value);\n      } else {\n        this.res.headers.set(name, value);\n      }\n    }\n  };\n  status = (status) => {\n    this.#isFresh = false;\n    this.#status = status;\n  };\n  set = (key, value) => {\n    this.#var ??= /* @__PURE__ */ new Map();\n    this.#var.set(key, value);\n  };\n  get = (key) => {\n    return this.#var ? this.#var.get(key) : void 0;\n  };\n  get var() {\n    if (!this.#var) {\n      return {};\n    }\n    return Object.fromEntries(this.#var);\n  }\n  #newResponse(data, arg, headers) {\n    if (this.#isFresh && !headers && !arg && this.#status === 200) {\n      return new Response(data, {\n        headers: this.#preparedHeaders\n      });\n    }\n    if (arg && typeof arg !== \"number\") {\n      const header = new Headers(arg.headers);\n      if (this.#headers) {\n        this.#headers.forEach((v, k) => {\n          if (k === \"set-cookie\") {\n            header.append(k, v);\n          } else {\n            header.set(k, v);\n          }\n        });\n      }\n      const headers2 = setHeaders(header, this.#preparedHeaders);\n      return new Response(data, {\n        headers: headers2,\n        status: arg.status ?? this.#status\n      });\n    }\n    const status = typeof arg === \"number\" ? arg : this.#status;\n    this.#preparedHeaders ??= {};\n    this.#headers ??= new Headers();\n    setHeaders(this.#headers, this.#preparedHeaders);\n    if (this.#res) {\n      this.#res.headers.forEach((v, k) => {\n        if (k === \"set-cookie\") {\n          this.#headers?.append(k, v);\n        } else {\n          this.#headers?.set(k, v);\n        }\n      });\n      setHeaders(this.#headers, this.#preparedHeaders);\n    }\n    headers ??= {};\n    for (const [k, v] of Object.entries(headers)) {\n      if (typeof v === \"string\") {\n        this.#headers.set(k, v);\n      } else {\n        this.#headers.delete(k);\n        for (const v2 of v) {\n          this.#headers.append(k, v2);\n        }\n      }\n    }\n    return new Response(data, {\n      status,\n      headers: this.#headers\n    });\n  }\n  newResponse = (...args) => this.#newResponse(...args);\n  body = (data, arg, headers) => {\n    return typeof arg === \"number\" ? this.#newResponse(data, arg, headers) : this.#newResponse(data, arg);\n  };\n  text = (text, arg, headers) => {\n    if (!this.#preparedHeaders) {\n      if (this.#isFresh && !headers && !arg) {\n        return new Response(text);\n      }\n      this.#preparedHeaders = {};\n    }\n    this.#preparedHeaders[\"content-type\"] = TEXT_PLAIN;\n    if (typeof arg === \"number\") {\n      return this.#newResponse(text, arg, headers);\n    }\n    return this.#newResponse(text, arg);\n  };\n  json = (object, arg, headers) => {\n    const body = JSON.stringify(object);\n    this.#preparedHeaders ??= {};\n    this.#preparedHeaders[\"content-type\"] = \"application/json\";\n    return typeof arg === \"number\" ? this.#newResponse(body, arg, headers) : this.#newResponse(body, arg);\n  };\n  html = (html, arg, headers) => {\n    this.#preparedHeaders ??= {};\n    this.#preparedHeaders[\"content-type\"] = \"text/html; charset=UTF-8\";\n    if (typeof html === \"object\") {\n      return resolveCallback(html, HtmlEscapedCallbackPhase.Stringify, false, {}).then((html2) => {\n        return typeof arg === \"number\" ? this.#newResponse(html2, arg, headers) : this.#newResponse(html2, arg);\n      });\n    }\n    return typeof arg === \"number\" ? this.#newResponse(html, arg, headers) : this.#newResponse(html, arg);\n  };\n  redirect = (location, status) => {\n    this.#headers ??= new Headers();\n    this.#headers.set(\"Location\", String(location));\n    return this.newResponse(null, status ?? 302);\n  };\n  notFound = () => {\n    this.#notFoundHandler ??= () => new Response();\n    return this.#notFoundHandler(this);\n  };\n};\nexport {\n  Context,\n  TEXT_PLAIN\n};\n","// src/router.ts\nvar METHOD_NAME_ALL = \"ALL\";\nvar METHOD_NAME_ALL_LOWERCASE = \"all\";\nvar METHODS = [\"get\", \"post\", \"put\", \"delete\", \"options\", \"patch\"];\nvar MESSAGE_MATCHER_IS_ALREADY_BUILT = \"Can not add a route since the matcher is already built.\";\nvar UnsupportedPathError = class extends Error {\n};\nexport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHODS,\n  METHOD_NAME_ALL,\n  METHOD_NAME_ALL_LOWERCASE,\n  UnsupportedPathError\n};\n","// src/utils/constants.ts\nvar COMPOSED_HANDLER = \"__COMPOSED_HANDLER\";\nexport {\n  COMPOSED_HANDLER\n};\n","// src/hono-base.ts\nimport { compose } from \"./compose.js\";\nimport { Context } from \"./context.js\";\nimport { METHODS, METHOD_NAME_ALL, METHOD_NAME_ALL_LOWERCASE } from \"./router.js\";\nimport { COMPOSED_HANDLER } from \"./utils/constants.js\";\nimport { getPath, getPathNoStrict, mergePath } from \"./utils/url.js\";\nvar notFoundHandler = (c) => {\n  return c.text(\"404 Not Found\", 404);\n};\nvar errorHandler = (err, c) => {\n  if (\"getResponse\" in err) {\n    return err.getResponse();\n  }\n  console.error(err);\n  return c.text(\"Internal Server Error\", 500);\n};\nvar Hono = class {\n  get;\n  post;\n  put;\n  delete;\n  options;\n  patch;\n  all;\n  on;\n  use;\n  router;\n  getPath;\n  _basePath = \"/\";\n  #path = \"/\";\n  routes = [];\n  constructor(options = {}) {\n    const allMethods = [...METHODS, METHOD_NAME_ALL_LOWERCASE];\n    allMethods.forEach((method) => {\n      this[method] = (args1, ...args) => {\n        if (typeof args1 === \"string\") {\n          this.#path = args1;\n        } else {\n          this.#addRoute(method, this.#path, args1);\n        }\n        args.forEach((handler) => {\n          this.#addRoute(method, this.#path, handler);\n        });\n        return this;\n      };\n    });\n    this.on = (method, path, ...handlers) => {\n      for (const p of [path].flat()) {\n        this.#path = p;\n        for (const m of [method].flat()) {\n          handlers.map((handler) => {\n            this.#addRoute(m.toUpperCase(), this.#path, handler);\n          });\n        }\n      }\n      return this;\n    };\n    this.use = (arg1, ...handlers) => {\n      if (typeof arg1 === \"string\") {\n        this.#path = arg1;\n      } else {\n        this.#path = \"*\";\n        handlers.unshift(arg1);\n      }\n      handlers.forEach((handler) => {\n        this.#addRoute(METHOD_NAME_ALL, this.#path, handler);\n      });\n      return this;\n    };\n    const { strict, ...optionsWithoutStrict } = options;\n    Object.assign(this, optionsWithoutStrict);\n    this.getPath = strict ?? true ? options.getPath ?? getPath : getPathNoStrict;\n  }\n  #clone() {\n    const clone = new Hono({\n      router: this.router,\n      getPath: this.getPath\n    });\n    clone.routes = this.routes;\n    return clone;\n  }\n  #notFoundHandler = notFoundHandler;\n  errorHandler = errorHandler;\n  route(path, app) {\n    const subApp = this.basePath(path);\n    app.routes.map((r) => {\n      let handler;\n      if (app.errorHandler === errorHandler) {\n        handler = r.handler;\n      } else {\n        handler = async (c, next) => (await compose([], app.errorHandler)(c, () => r.handler(c, next))).res;\n        handler[COMPOSED_HANDLER] = r.handler;\n      }\n      subApp.#addRoute(r.method, r.path, handler);\n    });\n    return this;\n  }\n  basePath(path) {\n    const subApp = this.#clone();\n    subApp._basePath = mergePath(this._basePath, path);\n    return subApp;\n  }\n  onError = (handler) => {\n    this.errorHandler = handler;\n    return this;\n  };\n  notFound = (handler) => {\n    this.#notFoundHandler = handler;\n    return this;\n  };\n  mount(path, applicationHandler, options) {\n    let replaceRequest;\n    let optionHandler;\n    if (options) {\n      if (typeof options === \"function\") {\n        optionHandler = options;\n      } else {\n        optionHandler = options.optionHandler;\n        replaceRequest = options.replaceRequest;\n      }\n    }\n    const getOptions = optionHandler ? (c) => {\n      const options2 = optionHandler(c);\n      return Array.isArray(options2) ? options2 : [options2];\n    } : (c) => {\n      let executionContext = void 0;\n      try {\n        executionContext = c.executionCtx;\n      } catch {\n      }\n      return [c.env, executionContext];\n    };\n    replaceRequest ||= (() => {\n      const mergedPath = mergePath(this._basePath, path);\n      const pathPrefixLength = mergedPath === \"/\" ? 0 : mergedPath.length;\n      return (request) => {\n        const url = new URL(request.url);\n        url.pathname = url.pathname.slice(pathPrefixLength) || \"/\";\n        return new Request(url, request);\n      };\n    })();\n    const handler = async (c, next) => {\n      const res = await applicationHandler(replaceRequest(c.req.raw), ...getOptions(c));\n      if (res) {\n        return res;\n      }\n      await next();\n    };\n    this.#addRoute(METHOD_NAME_ALL, mergePath(path, \"*\"), handler);\n    return this;\n  }\n  #addRoute(method, path, handler) {\n    method = method.toUpperCase();\n    path = mergePath(this._basePath, path);\n    const r = { path, method, handler };\n    this.router.add(method, path, [handler, r]);\n    this.routes.push(r);\n  }\n  #handleError(err, c) {\n    if (err instanceof Error) {\n      return this.errorHandler(err, c);\n    }\n    throw err;\n  }\n  #dispatch(request, executionCtx, env, method) {\n    if (method === \"HEAD\") {\n      return (async () => new Response(null, await this.#dispatch(request, executionCtx, env, \"GET\")))();\n    }\n    const path = this.getPath(request, { env });\n    const matchResult = this.router.match(method, path);\n    const c = new Context(request, {\n      path,\n      matchResult,\n      env,\n      executionCtx,\n      notFoundHandler: this.#notFoundHandler\n    });\n    if (matchResult[0].length === 1) {\n      let res;\n      try {\n        res = matchResult[0][0][0][0](c, async () => {\n          c.res = await this.#notFoundHandler(c);\n        });\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n      return res instanceof Promise ? res.then(\n        (resolved) => resolved || (c.finalized ? c.res : this.#notFoundHandler(c))\n      ).catch((err) => this.#handleError(err, c)) : res ?? this.#notFoundHandler(c);\n    }\n    const composed = compose(matchResult[0], this.errorHandler, this.#notFoundHandler);\n    return (async () => {\n      try {\n        const context = await composed(c);\n        if (!context.finalized) {\n          throw new Error(\n            \"Context is not finalized. Did you forget to return a Response object or `await next()`?\"\n          );\n        }\n        return context.res;\n      } catch (err) {\n        return this.#handleError(err, c);\n      }\n    })();\n  }\n  fetch = (request, ...rest) => {\n    return this.#dispatch(request, rest[1], rest[0], request.method);\n  };\n  request = (input, requestInit, Env, executionCtx) => {\n    if (input instanceof Request) {\n      return this.fetch(requestInit ? new Request(input, requestInit) : input, Env, executionCtx);\n    }\n    input = input.toString();\n    return this.fetch(\n      new Request(\n        /^https?:\\/\\//.test(input) ? input : `http://localhost${mergePath(\"/\", input)}`,\n        requestInit\n      ),\n      Env,\n      executionCtx\n    );\n  };\n  fire = () => {\n    addEventListener(\"fetch\", (event) => {\n      event.respondWith(this.#dispatch(event.request, event, void 0, event.request.method));\n    });\n  };\n};\nexport {\n  Hono as HonoBase\n};\n","// src/router/reg-exp-router/node.ts\nvar LABEL_REG_EXP_STR = \"[^/]+\";\nvar ONLY_WILDCARD_REG_EXP_STR = \".*\";\nvar TAIL_WILDCARD_REG_EXP_STR = \"(?:|/.*)\";\nvar PATH_ERROR = Symbol();\nvar regExpMetaChars = new Set(\".\\\\+*[^]$()\");\nfunction compareKey(a, b) {\n  if (a.length === 1) {\n    return b.length === 1 ? a < b ? -1 : 1 : -1;\n  }\n  if (b.length === 1) {\n    return 1;\n  }\n  if (a === ONLY_WILDCARD_REG_EXP_STR || a === TAIL_WILDCARD_REG_EXP_STR) {\n    return 1;\n  } else if (b === ONLY_WILDCARD_REG_EXP_STR || b === TAIL_WILDCARD_REG_EXP_STR) {\n    return -1;\n  }\n  if (a === LABEL_REG_EXP_STR) {\n    return 1;\n  } else if (b === LABEL_REG_EXP_STR) {\n    return -1;\n  }\n  return a.length === b.length ? a < b ? -1 : 1 : b.length - a.length;\n}\nvar Node = class {\n  #index;\n  #varIndex;\n  #children = /* @__PURE__ */ Object.create(null);\n  insert(tokens, index, paramMap, context, pathErrorCheckOnly) {\n    if (tokens.length === 0) {\n      if (this.#index !== void 0) {\n        throw PATH_ERROR;\n      }\n      if (pathErrorCheckOnly) {\n        return;\n      }\n      this.#index = index;\n      return;\n    }\n    const [token, ...restTokens] = tokens;\n    const pattern = token === \"*\" ? restTokens.length === 0 ? [\"\", \"\", ONLY_WILDCARD_REG_EXP_STR] : [\"\", \"\", LABEL_REG_EXP_STR] : token === \"/*\" ? [\"\", \"\", TAIL_WILDCARD_REG_EXP_STR] : token.match(/^\\:([^\\{\\}]+)(?:\\{(.+)\\})?$/);\n    let node;\n    if (pattern) {\n      const name = pattern[1];\n      let regexpStr = pattern[2] || LABEL_REG_EXP_STR;\n      if (name && pattern[2]) {\n        regexpStr = regexpStr.replace(/^\\((?!\\?:)(?=[^)]+\\)$)/, \"(?:\");\n        if (/\\((?!\\?:)/.test(regexpStr)) {\n          throw PATH_ERROR;\n        }\n      }\n      node = this.#children[regexpStr];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[regexpStr] = new Node();\n        if (name !== \"\") {\n          node.#varIndex = context.varIndex++;\n        }\n      }\n      if (!pathErrorCheckOnly && name !== \"\") {\n        paramMap.push([name, node.#varIndex]);\n      }\n    } else {\n      node = this.#children[token];\n      if (!node) {\n        if (Object.keys(this.#children).some(\n          (k) => k.length > 1 && k !== ONLY_WILDCARD_REG_EXP_STR && k !== TAIL_WILDCARD_REG_EXP_STR\n        )) {\n          throw PATH_ERROR;\n        }\n        if (pathErrorCheckOnly) {\n          return;\n        }\n        node = this.#children[token] = new Node();\n      }\n    }\n    node.insert(restTokens, index, paramMap, context, pathErrorCheckOnly);\n  }\n  buildRegExpStr() {\n    const childKeys = Object.keys(this.#children).sort(compareKey);\n    const strList = childKeys.map((k) => {\n      const c = this.#children[k];\n      return (typeof c.#varIndex === \"number\" ? `(${k})@${c.#varIndex}` : regExpMetaChars.has(k) ? `\\\\${k}` : k) + c.buildRegExpStr();\n    });\n    if (typeof this.#index === \"number\") {\n      strList.unshift(`#${this.#index}`);\n    }\n    if (strList.length === 0) {\n      return \"\";\n    }\n    if (strList.length === 1) {\n      return strList[0];\n    }\n    return \"(?:\" + strList.join(\"|\") + \")\";\n  }\n};\nexport {\n  Node,\n  PATH_ERROR\n};\n","// src/router/reg-exp-router/trie.ts\nimport { Node } from \"./node.js\";\nvar Trie = class {\n  #context = { varIndex: 0 };\n  #root = new Node();\n  insert(path, index, pathErrorCheckOnly) {\n    const paramAssoc = [];\n    const groups = [];\n    for (let i = 0; ; ) {\n      let replaced = false;\n      path = path.replace(/\\{[^}]+\\}/g, (m) => {\n        const mark = `@\\\\${i}`;\n        groups[i] = [mark, m];\n        i++;\n        replaced = true;\n        return mark;\n      });\n      if (!replaced) {\n        break;\n      }\n    }\n    const tokens = path.match(/(?::[^\\/]+)|(?:\\/\\*$)|./g) || [];\n    for (let i = groups.length - 1; i >= 0; i--) {\n      const [mark] = groups[i];\n      for (let j = tokens.length - 1; j >= 0; j--) {\n        if (tokens[j].indexOf(mark) !== -1) {\n          tokens[j] = tokens[j].replace(mark, groups[i][1]);\n          break;\n        }\n      }\n    }\n    this.#root.insert(tokens, index, paramAssoc, this.#context, pathErrorCheckOnly);\n    return paramAssoc;\n  }\n  buildRegExp() {\n    let regexp = this.#root.buildRegExpStr();\n    if (regexp === \"\") {\n      return [/^$/, [], []];\n    }\n    let captureIndex = 0;\n    const indexReplacementMap = [];\n    const paramReplacementMap = [];\n    regexp = regexp.replace(/#(\\d+)|@(\\d+)|\\.\\*\\$/g, (_, handlerIndex, paramIndex) => {\n      if (handlerIndex !== void 0) {\n        indexReplacementMap[++captureIndex] = Number(handlerIndex);\n        return \"$()\";\n      }\n      if (paramIndex !== void 0) {\n        paramReplacementMap[Number(paramIndex)] = ++captureIndex;\n        return \"\";\n      }\n      return \"\";\n    });\n    return [new RegExp(`^${regexp}`), indexReplacementMap, paramReplacementMap];\n  }\n};\nexport {\n  Trie\n};\n","// src/router/reg-exp-router/router.ts\nimport {\n  MESSAGE_MATCHER_IS_ALREADY_BUILT,\n  METHOD_NAME_ALL,\n  UnsupportedPathError\n} from \"../../router.js\";\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { PATH_ERROR } from \"./node.js\";\nimport { Trie } from \"./trie.js\";\nvar emptyParam = [];\nvar nullMatcher = [/^$/, [], /* @__PURE__ */ Object.create(null)];\nvar wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\nfunction buildWildcardRegExp(path) {\n  return wildcardRegExpCache[path] ??= new RegExp(\n    path === \"*\" ? \"\" : `^${path.replace(\n      /\\/\\*$|([.\\\\+*[^\\]$()])/g,\n      (_, metaChar) => metaChar ? `\\\\${metaChar}` : \"(?:|/.*)\"\n    )}$`\n  );\n}\nfunction clearWildcardRegExpCache() {\n  wildcardRegExpCache = /* @__PURE__ */ Object.create(null);\n}\nfunction buildMatcherFromPreprocessedRoutes(routes) {\n  const trie = new Trie();\n  const handlerData = [];\n  if (routes.length === 0) {\n    return nullMatcher;\n  }\n  const routesWithStaticPathFlag = routes.map(\n    (route) => [!/\\*|\\/:/.test(route[0]), ...route]\n  ).sort(\n    ([isStaticA, pathA], [isStaticB, pathB]) => isStaticA ? 1 : isStaticB ? -1 : pathA.length - pathB.length\n  );\n  const staticMap = /* @__PURE__ */ Object.create(null);\n  for (let i = 0, j = -1, len = routesWithStaticPathFlag.length; i < len; i++) {\n    const [pathErrorCheckOnly, path, handlers] = routesWithStaticPathFlag[i];\n    if (pathErrorCheckOnly) {\n      staticMap[path] = [handlers.map(([h]) => [h, /* @__PURE__ */ Object.create(null)]), emptyParam];\n    } else {\n      j++;\n    }\n    let paramAssoc;\n    try {\n      paramAssoc = trie.insert(path, j, pathErrorCheckOnly);\n    } catch (e) {\n      throw e === PATH_ERROR ? new UnsupportedPathError(path) : e;\n    }\n    if (pathErrorCheckOnly) {\n      continue;\n    }\n    handlerData[j] = handlers.map(([h, paramCount]) => {\n      const paramIndexMap = /* @__PURE__ */ Object.create(null);\n      paramCount -= 1;\n      for (; paramCount >= 0; paramCount--) {\n        const [key, value] = paramAssoc[paramCount];\n        paramIndexMap[key] = value;\n      }\n      return [h, paramIndexMap];\n    });\n  }\n  const [regexp, indexReplacementMap, paramReplacementMap] = trie.buildRegExp();\n  for (let i = 0, len = handlerData.length; i < len; i++) {\n    for (let j = 0, len2 = handlerData[i].length; j < len2; j++) {\n      const map = handlerData[i][j]?.[1];\n      if (!map) {\n        continue;\n      }\n      const keys = Object.keys(map);\n      for (let k = 0, len3 = keys.length; k < len3; k++) {\n        map[keys[k]] = paramReplacementMap[map[keys[k]]];\n      }\n    }\n  }\n  const handlerMap = [];\n  for (const i in indexReplacementMap) {\n    handlerMap[i] = handlerData[indexReplacementMap[i]];\n  }\n  return [regexp, handlerMap, staticMap];\n}\nfunction findMiddleware(middleware, path) {\n  if (!middleware) {\n    return void 0;\n  }\n  for (const k of Object.keys(middleware).sort((a, b) => b.length - a.length)) {\n    if (buildWildcardRegExp(k).test(path)) {\n      return [...middleware[k]];\n    }\n  }\n  return void 0;\n}\nvar RegExpRouter = class {\n  name = \"RegExpRouter\";\n  #middleware;\n  #routes;\n  constructor() {\n    this.#middleware = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n    this.#routes = { [METHOD_NAME_ALL]: /* @__PURE__ */ Object.create(null) };\n  }\n  add(method, path, handler) {\n    const middleware = this.#middleware;\n    const routes = this.#routes;\n    if (!middleware || !routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    if (!middleware[method]) {\n      ;\n      [middleware, routes].forEach((handlerMap) => {\n        handlerMap[method] = /* @__PURE__ */ Object.create(null);\n        Object.keys(handlerMap[METHOD_NAME_ALL]).forEach((p) => {\n          handlerMap[method][p] = [...handlerMap[METHOD_NAME_ALL][p]];\n        });\n      });\n    }\n    if (path === \"/*\") {\n      path = \"*\";\n    }\n    const paramCount = (path.match(/\\/:/g) || []).length;\n    if (/\\*$/.test(path)) {\n      const re = buildWildcardRegExp(path);\n      if (method === METHOD_NAME_ALL) {\n        Object.keys(middleware).forEach((m) => {\n          middleware[m][path] ||= findMiddleware(middleware[m], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n        });\n      } else {\n        middleware[method][path] ||= findMiddleware(middleware[method], path) || findMiddleware(middleware[METHOD_NAME_ALL], path) || [];\n      }\n      Object.keys(middleware).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(middleware[m]).forEach((p) => {\n            re.test(p) && middleware[m][p].push([handler, paramCount]);\n          });\n        }\n      });\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          Object.keys(routes[m]).forEach(\n            (p) => re.test(p) && routes[m][p].push([handler, paramCount])\n          );\n        }\n      });\n      return;\n    }\n    const paths = checkOptionalParameter(path) || [path];\n    for (let i = 0, len = paths.length; i < len; i++) {\n      const path2 = paths[i];\n      Object.keys(routes).forEach((m) => {\n        if (method === METHOD_NAME_ALL || method === m) {\n          routes[m][path2] ||= [\n            ...findMiddleware(middleware[m], path2) || findMiddleware(middleware[METHOD_NAME_ALL], path2) || []\n          ];\n          routes[m][path2].push([handler, paramCount - len + i + 1]);\n        }\n      });\n    }\n  }\n  match(method, path) {\n    clearWildcardRegExpCache();\n    const matchers = this.#buildAllMatchers();\n    this.match = (method2, path2) => {\n      const matcher = matchers[method2] || matchers[METHOD_NAME_ALL];\n      const staticMatch = matcher[2][path2];\n      if (staticMatch) {\n        return staticMatch;\n      }\n      const match = path2.match(matcher[0]);\n      if (!match) {\n        return [[], emptyParam];\n      }\n      const index = match.indexOf(\"\", 1);\n      return [matcher[1][index], match];\n    };\n    return this.match(method, path);\n  }\n  #buildAllMatchers() {\n    const matchers = /* @__PURE__ */ Object.create(null);\n    Object.keys(this.#routes).concat(Object.keys(this.#middleware)).forEach((method) => {\n      matchers[method] ||= this.#buildMatcher(method);\n    });\n    this.#middleware = this.#routes = void 0;\n    return matchers;\n  }\n  #buildMatcher(method) {\n    const routes = [];\n    let hasOwnRoute = method === METHOD_NAME_ALL;\n    [this.#middleware, this.#routes].forEach((r) => {\n      const ownRoute = r[method] ? Object.keys(r[method]).map((path) => [path, r[method][path]]) : [];\n      if (ownRoute.length !== 0) {\n        hasOwnRoute ||= true;\n        routes.push(...ownRoute);\n      } else if (method !== METHOD_NAME_ALL) {\n        routes.push(\n          ...Object.keys(r[METHOD_NAME_ALL]).map((path) => [path, r[METHOD_NAME_ALL][path]])\n        );\n      }\n    });\n    if (!hasOwnRoute) {\n      return null;\n    } else {\n      return buildMatcherFromPreprocessedRoutes(routes);\n    }\n  }\n};\nexport {\n  RegExpRouter\n};\n","// src/router/smart-router/router.ts\nimport { MESSAGE_MATCHER_IS_ALREADY_BUILT, UnsupportedPathError } from \"../../router.js\";\nvar SmartRouter = class {\n  name = \"SmartRouter\";\n  #routers = [];\n  #routes = [];\n  constructor(init) {\n    this.#routers = init.routers;\n  }\n  add(method, path, handler) {\n    if (!this.#routes) {\n      throw new Error(MESSAGE_MATCHER_IS_ALREADY_BUILT);\n    }\n    this.#routes.push([method, path, handler]);\n  }\n  match(method, path) {\n    if (!this.#routes) {\n      throw new Error(\"Fatal error\");\n    }\n    const routers = this.#routers;\n    const routes = this.#routes;\n    const len = routers.length;\n    let i = 0;\n    let res;\n    for (; i < len; i++) {\n      const router = routers[i];\n      try {\n        for (let i2 = 0, len2 = routes.length; i2 < len2; i2++) {\n          router.add(...routes[i2]);\n        }\n        res = router.match(method, path);\n      } catch (e) {\n        if (e instanceof UnsupportedPathError) {\n          continue;\n        }\n        throw e;\n      }\n      this.match = router.match.bind(router);\n      this.#routers = [router];\n      this.#routes = void 0;\n      break;\n    }\n    if (i === len) {\n      throw new Error(\"Fatal error\");\n    }\n    this.name = `SmartRouter + ${this.activeRouter.name}`;\n    return res;\n  }\n  get activeRouter() {\n    if (this.#routes || this.#routers.length !== 1) {\n      throw new Error(\"No active router has been determined yet.\");\n    }\n    return this.#routers[0];\n  }\n};\nexport {\n  SmartRouter\n};\n","// src/router/trie-router/node.ts\nimport { METHOD_NAME_ALL } from \"../../router.js\";\nimport { getPattern, splitPath, splitRoutingPath } from \"../../utils/url.js\";\nvar emptyParams = /* @__PURE__ */ Object.create(null);\nvar Node = class {\n  #methods;\n  #children;\n  #patterns;\n  #order = 0;\n  #params = emptyParams;\n  constructor(method, handler, children) {\n    this.#children = children || /* @__PURE__ */ Object.create(null);\n    this.#methods = [];\n    if (method && handler) {\n      const m = /* @__PURE__ */ Object.create(null);\n      m[method] = { handler, possibleKeys: [], score: 0 };\n      this.#methods = [m];\n    }\n    this.#patterns = [];\n  }\n  insert(method, path, handler) {\n    this.#order = ++this.#order;\n    let curNode = this;\n    const parts = splitRoutingPath(path);\n    const possibleKeys = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const p = parts[i];\n      const nextP = parts[i + 1];\n      const pattern = getPattern(p, nextP);\n      const key = Array.isArray(pattern) ? pattern[0] : p;\n      if (Object.keys(curNode.#children).includes(key)) {\n        curNode = curNode.#children[key];\n        const pattern2 = getPattern(p, nextP);\n        if (pattern2) {\n          possibleKeys.push(pattern2[1]);\n        }\n        continue;\n      }\n      curNode.#children[key] = new Node();\n      if (pattern) {\n        curNode.#patterns.push(pattern);\n        possibleKeys.push(pattern[1]);\n      }\n      curNode = curNode.#children[key];\n    }\n    const m = /* @__PURE__ */ Object.create(null);\n    const handlerSet = {\n      handler,\n      possibleKeys: possibleKeys.filter((v, i, a) => a.indexOf(v) === i),\n      score: this.#order\n    };\n    m[method] = handlerSet;\n    curNode.#methods.push(m);\n    return curNode;\n  }\n  #getHandlerSets(node, method, nodeParams, params) {\n    const handlerSets = [];\n    for (let i = 0, len = node.#methods.length; i < len; i++) {\n      const m = node.#methods[i];\n      const handlerSet = m[method] || m[METHOD_NAME_ALL];\n      const processedSet = {};\n      if (handlerSet !== void 0) {\n        handlerSet.params = /* @__PURE__ */ Object.create(null);\n        handlerSets.push(handlerSet);\n        if (nodeParams !== emptyParams || params && params !== emptyParams) {\n          for (let i2 = 0, len2 = handlerSet.possibleKeys.length; i2 < len2; i2++) {\n            const key = handlerSet.possibleKeys[i2];\n            const processed = processedSet[handlerSet.score];\n            handlerSet.params[key] = params?.[key] && !processed ? params[key] : nodeParams[key] ?? params?.[key];\n            processedSet[handlerSet.score] = true;\n          }\n        }\n      }\n    }\n    return handlerSets;\n  }\n  search(method, path) {\n    const handlerSets = [];\n    this.#params = emptyParams;\n    const curNode = this;\n    let curNodes = [curNode];\n    const parts = splitPath(path);\n    const curNodesQueue = [];\n    for (let i = 0, len = parts.length; i < len; i++) {\n      const part = parts[i];\n      const isLast = i === len - 1;\n      const tempNodes = [];\n      for (let j = 0, len2 = curNodes.length; j < len2; j++) {\n        const node = curNodes[j];\n        const nextNode = node.#children[part];\n        if (nextNode) {\n          nextNode.#params = node.#params;\n          if (isLast) {\n            if (nextNode.#children[\"*\"]) {\n              handlerSets.push(\n                ...this.#getHandlerSets(nextNode.#children[\"*\"], method, node.#params)\n              );\n            }\n            handlerSets.push(...this.#getHandlerSets(nextNode, method, node.#params));\n          } else {\n            tempNodes.push(nextNode);\n          }\n        }\n        for (let k = 0, len3 = node.#patterns.length; k < len3; k++) {\n          const pattern = node.#patterns[k];\n          const params = node.#params === emptyParams ? {} : { ...node.#params };\n          if (pattern === \"*\") {\n            const astNode = node.#children[\"*\"];\n            if (astNode) {\n              handlerSets.push(...this.#getHandlerSets(astNode, method, node.#params));\n              astNode.#params = params;\n              tempNodes.push(astNode);\n            }\n            continue;\n          }\n          if (part === \"\") {\n            continue;\n          }\n          const [key, name, matcher] = pattern;\n          const child = node.#children[key];\n          const restPathString = parts.slice(i).join(\"/\");\n          if (matcher instanceof RegExp) {\n            const m = matcher.exec(restPathString);\n            if (m) {\n              params[name] = m[0];\n              handlerSets.push(...this.#getHandlerSets(child, method, node.#params, params));\n              if (Object.keys(child.#children).length) {\n                child.#params = params;\n                const componentCount = m[0].match(/\\//)?.length ?? 0;\n                const targetCurNodes = curNodesQueue[componentCount] ||= [];\n                targetCurNodes.push(child);\n              }\n              continue;\n            }\n          }\n          if (matcher === true || matcher.test(part)) {\n            params[name] = part;\n            if (isLast) {\n              handlerSets.push(...this.#getHandlerSets(child, method, params, node.#params));\n              if (child.#children[\"*\"]) {\n                handlerSets.push(\n                  ...this.#getHandlerSets(child.#children[\"*\"], method, params, node.#params)\n                );\n              }\n            } else {\n              child.#params = params;\n              tempNodes.push(child);\n            }\n          }\n        }\n      }\n      curNodes = tempNodes.concat(curNodesQueue.shift() ?? []);\n    }\n    if (handlerSets.length > 1) {\n      handlerSets.sort((a, b) => {\n        return a.score - b.score;\n      });\n    }\n    return [handlerSets.map(({ handler, params }) => [handler, params])];\n  }\n};\nexport {\n  Node\n};\n","// src/router/trie-router/router.ts\nimport { checkOptionalParameter } from \"../../utils/url.js\";\nimport { Node } from \"./node.js\";\nvar TrieRouter = class {\n  name = \"TrieRouter\";\n  #node;\n  constructor() {\n    this.#node = new Node();\n  }\n  add(method, path, handler) {\n    const results = checkOptionalParameter(path);\n    if (results) {\n      for (let i = 0, len = results.length; i < len; i++) {\n        this.#node.insert(method, results[i], handler);\n      }\n      return;\n    }\n    this.#node.insert(method, path, handler);\n  }\n  match(method, path) {\n    return this.#node.search(method, path);\n  }\n};\nexport {\n  TrieRouter\n};\n","// src/hono.ts\nimport { HonoBase } from \"./hono-base.js\";\nimport { RegExpRouter } from \"./router/reg-exp-router/index.js\";\nimport { SmartRouter } from \"./router/smart-router/index.js\";\nimport { TrieRouter } from \"./router/trie-router/index.js\";\nvar Hono = class extends HonoBase {\n  constructor(options = {}) {\n    super(options);\n    this.router = options.router ?? new SmartRouter({\n      routers: [new RegExpRouter(), new TrieRouter()]\n    });\n  }\n};\nexport {\n  Hono\n};\n","// src/helper/factory/index.ts\nimport { Hono } from \"../../hono.js\";\nvar Factory = class {\n  initApp;\n  #defaultAppOptions;\n  constructor(init) {\n    this.initApp = init?.initApp;\n    this.#defaultAppOptions = init?.defaultAppOptions;\n  }\n  createApp = (options) => {\n    const app = new Hono(\n      options && this.#defaultAppOptions ? { ...this.#defaultAppOptions, ...options } : options ?? this.#defaultAppOptions\n    );\n    if (this.initApp) {\n      this.initApp(app);\n    }\n    return app;\n  };\n  createMiddleware = (middleware) => middleware;\n  createHandlers = (...handlers) => {\n    return handlers.filter((handler) => handler !== void 0);\n  };\n};\nvar createFactory = (init) => new Factory(init);\nvar createMiddleware = (middleware) => middleware;\nexport {\n  Factory,\n  createFactory,\n  createMiddleware\n};\n","const COMPONENT_NAME = \"component-name\";\nconst COMPONENT_EXPORT = \"component-export\";\nconst DATA_SERIALIZED_PROPS = \"data-serialized-props\";\nconst DATA_HONO_TEMPLATE = \"data-hono-template\";\nconst IMPORTING_ISLANDS_ID = \"__importing_islands\";\nexport {\n  COMPONENT_EXPORT,\n  COMPONENT_NAME,\n  DATA_HONO_TEMPLATE,\n  DATA_SERIALIZED_PROPS,\n  IMPORTING_ISLANDS_ID\n};\n","import { AsyncLocalStorage } from \"node:async_hooks\";\nconst contextStorage = new AsyncLocalStorage();\nexport {\n  contextStorage\n};\n","const filePathToPath = (filePath) => {\n  filePath = filePath.replace(/\\.tsx?$/g, \"\").replace(/\\.mdx?$/g, \"\").replace(/^\\/?index$/, \"/\").replace(/\\/index$/, \"\").replace(/\\[\\.{3}.+\\]/, \"*\").replace(/\\[(.+?)\\]/g, \":$1\");\n  return /^\\//.test(filePath) ? filePath : \"/\" + filePath;\n};\nconst groupByDirectory = (files) => {\n  const organizedFiles = {};\n  for (const [path, content] of Object.entries(files)) {\n    const pathParts = path.split(\"/\");\n    const fileName = pathParts.pop();\n    const directory = pathParts.join(\"/\");\n    if (!organizedFiles[directory]) {\n      organizedFiles[directory] = {};\n    }\n    if (fileName) {\n      organizedFiles[directory][fileName] = content;\n    }\n  }\n  for (const [directory, files2] of Object.entries(organizedFiles)) {\n    const sortedEntries = Object.entries(files2).sort(([keyA], [keyB]) => {\n      if (keyA[0] === \"[\" && keyB[0] !== \"[\") {\n        return 1;\n      }\n      if (keyA[0] !== \"[\" && keyB[0] === \"[\") {\n        return -1;\n      }\n      return keyA.localeCompare(keyB);\n    });\n    organizedFiles[directory] = Object.fromEntries(sortedEntries);\n  }\n  return organizedFiles;\n};\nconst sortDirectoriesByDepth = (directories) => {\n  const sortedKeys = Object.keys(directories).sort((a, b) => {\n    const depthA = a.split(\"/\").length;\n    const depthB = b.split(\"/\").length;\n    return depthA - depthB || b.localeCompare(a);\n  });\n  return sortedKeys.map((key) => ({\n    [key]: directories[key]\n  }));\n};\nconst listByDirectory = (files) => {\n  const organizedFiles = {};\n  for (const path of Object.keys(files)) {\n    const pathParts = path.split(\"/\");\n    pathParts.pop();\n    const directory = pathParts.join(\"/\");\n    if (!organizedFiles[directory]) {\n      organizedFiles[directory] = [];\n    }\n    if (!organizedFiles[directory].includes(path)) {\n      organizedFiles[directory].push(path);\n    }\n  }\n  const directories = Object.keys(organizedFiles).sort((a, b) => b.length - a.length);\n  for (const dir of directories) {\n    for (const subDir of directories) {\n      if (subDir.startsWith(dir) && subDir !== dir) {\n        const uniqueFiles = /* @__PURE__ */ new Set([...organizedFiles[subDir], ...organizedFiles[dir]]);\n        organizedFiles[subDir] = [...uniqueFiles];\n      }\n    }\n  }\n  return organizedFiles;\n};\nconst pathToDirectoryPath = (path) => {\n  const dirPath = path.replace(/[^\\/]+$/, \"\");\n  return dirPath;\n};\nexport {\n  filePathToPath,\n  groupByDirectory,\n  listByDirectory,\n  pathToDirectoryPath,\n  sortDirectoriesByDepth\n};\n","import { Hono } from \"hono\";\nimport { createMiddleware } from \"hono/factory\";\nimport { IMPORTING_ISLANDS_ID } from \"../constants.js\";\nimport { contextStorage } from \"./context-storage.js\";\nimport {\n  filePathToPath,\n  groupByDirectory,\n  listByDirectory,\n  sortDirectoriesByDepth\n} from \"./utils/file.js\";\nconst NOTFOUND_FILENAME = \"_404.tsx\";\nconst ERROR_FILENAME = \"_error.tsx\";\nconst METHODS = [\"GET\", \"POST\", \"PUT\", \"DELETE\", \"OPTIONS\", \"PATCH\"];\nconst createApp = (options) => {\n  const root = options.root;\n  const rootRegExp = new RegExp(`^${root}`);\n  const getRootPath = (dir) => filePathToPath(dir.replace(rootRegExp, \"\"));\n  const app = options.app ?? new Hono();\n  const trailingSlash = options.trailingSlash ?? false;\n  app.use(async function ShareContext(c, next) {\n    await contextStorage.run(c, () => next());\n  });\n  if (options.init) {\n    options.init(app);\n  }\n  const NOT_FOUND_FILE = options.NOT_FOUND;\n  const notFoundMap = groupByDirectory(NOT_FOUND_FILE);\n  const ERROR_FILE = options.ERROR;\n  const errorMap = groupByDirectory(ERROR_FILE);\n  const RENDERER_FILE = options.RENDERER;\n  const rendererList = listByDirectory(RENDERER_FILE);\n  const MIDDLEWARE_FILE = options.MIDDLEWARE;\n  const ROUTES_FILE = options.ROUTES;\n  const routesMap = sortDirectoriesByDepth(groupByDirectory(ROUTES_FILE));\n  const getPaths = (currentDirectory, fileList) => {\n    let paths = fileList[currentDirectory] ?? [];\n    const getChildPaths = (childDirectories) => {\n      paths = fileList[childDirectories.join(\"/\")];\n      if (!paths) {\n        childDirectories.pop();\n        if (childDirectories.length) {\n          getChildPaths(childDirectories);\n        }\n      }\n      return paths ?? [];\n    };\n    const renderDirPaths = currentDirectory.split(\"/\");\n    paths = getChildPaths(renderDirPaths);\n    paths.sort((a, b) => a.split(\"/\").length - b.split(\"/\").length);\n    return paths;\n  };\n  const errorHandlerMap = {};\n  for (const map of routesMap) {\n    for (const [dir, content] of Object.entries(map)) {\n      const subApp = new Hono();\n      let hasIslandComponent = false;\n      const rendererPaths = getPaths(dir, rendererList);\n      rendererPaths.map((path) => {\n        const renderer = RENDERER_FILE[path];\n        const importingIslands = renderer[IMPORTING_ISLANDS_ID];\n        if (importingIslands) {\n          hasIslandComponent = true;\n        }\n        const rendererDefault = renderer.default;\n        if (rendererDefault) {\n          subApp.all(\"*\", rendererDefault);\n        }\n      });\n      const middlewareFile = Object.keys(MIDDLEWARE_FILE).find((x) => {\n        const replacedDir = dir.replaceAll(\"[\", \"\\\\[\").replace(\"]\", \"\\\\]\");\n        return new RegExp(replacedDir + \"/_middleware.tsx?\").test(x);\n      });\n      if (middlewareFile) {\n        const middleware = MIDDLEWARE_FILE[middlewareFile];\n        if (middleware.default) {\n          subApp.use(...middleware.default);\n        }\n      }\n      for (const [filename, route] of Object.entries(content)) {\n        const importingIslands = route[IMPORTING_ISLANDS_ID];\n        const setInnerMeta = createMiddleware(async function innerMeta(c, next) {\n          c.set(IMPORTING_ISLANDS_ID, importingIslands ? true : hasIslandComponent);\n          await next();\n        });\n        const routeDefault = route.default;\n        const path = filePathToPath(filename);\n        if (routeDefault && \"fetch\" in routeDefault) {\n          subApp.use(setInnerMeta);\n          subApp.route(path, routeDefault);\n        }\n        for (const m of METHODS) {\n          const handlers = route[m];\n          if (handlers) {\n            subApp.on(m, path, setInnerMeta);\n            subApp.on(m, path, ...handlers);\n          }\n        }\n        if (routeDefault && Array.isArray(routeDefault)) {\n          subApp.get(path, setInnerMeta);\n          subApp.get(path, ...routeDefault);\n        }\n        if (typeof routeDefault === \"function\") {\n          subApp.get(path, setInnerMeta);\n          subApp.get(path, async (c) => {\n            const result = await routeDefault(c);\n            if (result instanceof Response) {\n              return result;\n            }\n            return c.render(result, route);\n          });\n        }\n      }\n      const errorHandler = getErrorHandler(dir, errorMap);\n      if (errorHandler) {\n        errorHandlerMap[dir] = errorHandler;\n      }\n      for (const [path, errorHandler2] of Object.entries(errorHandlerMap)) {\n        const regExp = new RegExp(`^${path}`);\n        if (regExp.test(dir) && errorHandler2) {\n          subApp.onError(errorHandler2);\n        }\n      }\n      let rootPath = getRootPath(dir);\n      if (trailingSlash) {\n        rootPath = /\\/$/.test(rootPath) ? rootPath : rootPath + \"/\";\n      }\n      app.route(rootPath, subApp);\n    }\n  }\n  for (const map of routesMap.reverse()) {\n    const dir = Object.entries(map)[0][0];\n    const subApp = new Hono();\n    applyNotFound(subApp, dir, notFoundMap);\n    const rootPath = getRootPath(dir);\n    app.route(rootPath, subApp);\n  }\n  return app;\n};\nfunction applyNotFound(app, dir, map) {\n  for (const [mapDir, content] of Object.entries(map)) {\n    if (dir === mapDir) {\n      const notFound = content[NOTFOUND_FILENAME];\n      if (notFound) {\n        const notFoundHandler = notFound.default;\n        const importingIslands = notFound[IMPORTING_ISLANDS_ID];\n        if (importingIslands) {\n          app.use(\"*\", (c, next) => {\n            c.set(IMPORTING_ISLANDS_ID, true);\n            return next();\n          });\n        }\n        app.get(\"*\", (c) => {\n          c.status(404);\n          return notFoundHandler(c);\n        });\n      }\n    }\n  }\n}\nfunction getErrorHandler(dir, map) {\n  for (const [mapDir, content] of Object.entries(map)) {\n    if (dir === mapDir) {\n      const errorFile = content[ERROR_FILENAME];\n      if (errorFile) {\n        const matchedErrorHandler = errorFile.default;\n        if (matchedErrorHandler) {\n          const errorHandler = async (error, c) => {\n            const importingIslands = errorFile[IMPORTING_ISLANDS_ID];\n            if (importingIslands) {\n              c.set(IMPORTING_ISLANDS_ID, importingIslands);\n            }\n            c.status(500);\n            return matchedErrorHandler(error, c);\n          };\n          return errorHandler;\n        }\n      }\n    }\n  }\n}\nexport {\n  createApp\n};\n","import { createApp as baseCreateApp } from \"./server.js\";\nconst createApp = (options) => {\n  const newOptions = {\n    root: options?.root ?? \"/app/routes\",\n    app: options?.app,\n    init: options?.init,\n    trailingSlash: options?.trailingSlash,\n    NOT_FOUND: options?.NOT_FOUND ?? import.meta.glob(\"/app/routes/**/_404.(ts|tsx)\", {\n      eager: true\n    }),\n    ERROR: options?.ERROR ?? import.meta.glob(\"/app/routes/**/_error.(ts|tsx)\", {\n      eager: true\n    }),\n    RENDERER: options?.RENDERER ?? import.meta.glob(\"/app/routes/**/_renderer.tsx\", {\n      eager: true\n    }),\n    MIDDLEWARE: options?.MIDDLEWARE ?? import.meta.glob(\"/app/routes/**/_middleware.(ts|tsx)\", {\n      eager: true\n    }),\n    ROUTES: options?.ROUTES ?? import.meta.glob(\n      [\n        \"/app/routes/**/!(_*|$*|*.test|*.spec).(ts|tsx|md|mdx)\",\n        \"/app/routes/.well-known/**/!(_*|$*|*.test|*.spec).(ts|tsx|md|mdx)\"\n      ],\n      {\n        eager: true\n      }\n    )\n  };\n  return baseCreateApp(newOptions);\n};\nexport {\n  createApp\n};\n","//Imports\nimport { serveStatic } from '@hono/node-server/serve-static'\nimport { createApp } from 'honox/server'\n\n//Create app\nconst app = createApp()\n\n//Serve HTML\napp.get('/', (c) => {\n    return c.html('a')\n})\n\n//Serve static files\napp.get('/static/*', serveStatic({ root: './' }))\napp.get('/public/*', serveStatic({ root: './' }))\n\n//Export\nexport default app"],"names":["getFilePath","options","filename","defaultDocument","getFilePathWithoutDefaultDocument","root","path","getMimeType","mimes","baseMimes","regexp","match","mimeType","_baseMimes","COMPRESSIBLE_CONTENT_TYPE_REGEX","ENCODINGS","ENCODINGS_ORDERED_KEYS","createStreamBody","stream","controller","chunk","addCurrentDirPrefix","getStats","stats","lstatSync","serveStatic","c","next","_a","_b","_c","acceptEncodingSet","_d","encoding","precompressedStats","size","range","createReadStream","parts","start","end","chunksize","compose","middleware","onError","onNotFound","context","index","dispatch","i","res","isError","handler","err","parseBody","request","all","dot","contentType","HonoRequest","parseFormData","formData","convertFormDataToBodyData","form","value","key","handleParsingAllValues","handleParsingNestedValues","nestedForm","keys","key2","splitPath","paths","splitRoutingPath","routePath","groups","extractGroupsFromPath","replaceGroupMarks","mark","j","patternCache","getPattern","label","cacheKey","tryDecode","str","decoder","tryDecodeURI","getPath","url","charCode","queryIndex","getPathNoStrict","result","mergePath","base","sub","rest","checkOptionalParameter","segments","results","basePath","segment","optionalSegment","v","a","_decodeURI","decodeURIComponent_","_getQueryParam","multiple","encoded","keyIndex2","trailingKeyCode","valueIndex","endIndex","keyIndex","nextKeyIndex","name","getQueryParam","getQueryParams","tryDecodeURIComponent","matchResult","__privateAdd","_HonoRequest_instances","__publicField","_validatedData","_matchResult","_cachedBody","bodyCache","raw","cachedBody","anyCachedKey","body","__privateSet","__privateMethod","getDecodedParam_fn","getAllDecodedParams_fn","headerData","__privateGet","target","data","route","paramKey","param","getParamValue_fn","decoded","HtmlEscapedCallbackPhase","resolveCallback","phase","preserveCallbacks","buffer","callbacks","str2","TEXT_PLAIN","setHeaders","headers","map","Context","req","_Context_instances","_rawRequest","_req","_var","_status","_executionCtx","_headers","_preparedHeaders","_res","_isFresh","_layout","_renderer","_notFoundHandler","_path","args","content","layout","renderer","status","newResponse_fn","arg","text","object","html","html2","location","k","cookies","cookie","header","headers2","v2","METHOD_NAME_ALL","METHOD_NAME_ALL_LOWERCASE","METHODS","MESSAGE_MATCHER_IS_ALREADY_BUILT","UnsupportedPathError","COMPOSED_HANDLER","notFoundHandler","errorHandler","Hono","_Hono_instances","dispatch_fn","input","requestInit","Env","executionCtx","event","method","args1","addRoute_fn","handlers","p","m","arg1","strict","optionsWithoutStrict","app","subApp","r","clone_fn","applicationHandler","replaceRequest","optionHandler","getOptions","options2","executionContext","mergedPath","pathPrefixLength","clone","handleError_fn","env","resolved","composed","LABEL_REG_EXP_STR","ONLY_WILDCARD_REG_EXP_STR","TAIL_WILDCARD_REG_EXP_STR","PATH_ERROR","regExpMetaChars","compareKey","b","Node","_index","_varIndex","_children","tokens","paramMap","pathErrorCheckOnly","token","restTokens","pattern","node","regexpStr","strList","Trie","_context","_root","paramAssoc","replaced","captureIndex","indexReplacementMap","paramReplacementMap","_","handlerIndex","paramIndex","emptyParam","nullMatcher","wildcardRegExpCache","buildWildcardRegExp","metaChar","clearWildcardRegExpCache","buildMatcherFromPreprocessedRoutes","routes","trie","handlerData","routesWithStaticPathFlag","isStaticA","pathA","isStaticB","pathB","staticMap","len","h","e","paramCount","paramIndexMap","len2","len3","handlerMap","findMiddleware","RegExpRouter","_RegExpRouter_instances","_middleware","_routes","re","path2","matchers","buildAllMatchers_fn","method2","matcher","staticMatch","buildMatcher_fn","hasOwnRoute","ownRoute","SmartRouter","init","_routers","routers","router","i2","emptyParams","children","_Node_instances","_methods","_patterns","_order","_params","__privateWrapper","curNode","possibleKeys","nextP","pattern2","handlerSet","handlerSets","curNodes","curNodesQueue","part","isLast","tempNodes","nextNode","getHandlerSets_fn","params","astNode","child","restPathString","componentCount","nodeParams","processedSet","processed","TrieRouter","_node","HonoBase","createMiddleware","IMPORTING_ISLANDS_ID","contextStorage","AsyncLocalStorage","filePathToPath","filePath","groupByDirectory","files","organizedFiles","pathParts","fileName","directory","files2","sortedEntries","keyA","keyB","sortDirectoriesByDepth","directories","depthA","depthB","listByDirectory","dir","subDir","uniqueFiles","NOTFOUND_FILENAME","ERROR_FILENAME","createApp","rootRegExp","getRootPath","NOT_FOUND_FILE","notFoundMap","ERROR_FILE","errorMap","RENDERER_FILE","rendererList","MIDDLEWARE_FILE","ROUTES_FILE","routesMap","getPaths","currentDirectory","fileList","getChildPaths","childDirectories","renderDirPaths","errorHandlerMap","hasIslandComponent","rendererDefault","middlewareFile","x","replacedDir","importingIslands","setInnerMeta","routeDefault","getErrorHandler","errorHandler2","rootPath","applyNotFound","mapDir","notFound","errorFile","matchedErrorHandler","error","baseCreateApp"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24]}